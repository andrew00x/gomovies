method.insert = cfg.basedir,  private|const|string, (cat,"{{ rtorrent.home_dir }}/")
method.insert = cfg.logs,     private|const|string, (cat,"{{ rtorrent.log_dir }}/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.session,  private|const|string, (cat,"{{ rtorrent.session_dir }}/")
method.insert = cfg.download, private|const|string, (cat,"{{ torrent_download_dir }}/")

network.port_range.set = 50000-50000
network.port_random.set = no

dht.mode.set = disable
protocol.pex.set = no

trackers.use_udp.set = no

throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250

throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry


network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300


pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M


session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
log.execute = (cat, (cfg.logs), "execute.log")
log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = sh, -c, (cat, "echo >",\
    (cfg.session), "rtorrent.pid", " ",(system.pid))


encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))


network.scgi.open_local = (cat,"{{ rtorrent.rpc_socket_file }}")
execute.nothrow = chmod,770,(cat,"{{ rtorrent.rpc_socket_file }}")


print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
